# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java build and Artifact Upload

on:
  push:
  pull_request:
#  schedule:
#  - cron: "15 6 1 * *"
permissions:
  contents: read

jobs:
  build-with-Artifact:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3.5.1
      with:
        java-version: 17
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        cache-disabled: true
        gradle-home-cache-cleanup: true
    - name: Easy Zip Files
      # You may pin to the exact commit or the version.
      # uses: vimtor/action-zip@26a249fb00d43ca98dad77a4b3838025fc226aa1
      uses: vimtor/action-zip@v1.1
      with:
        # Files or directories to zip
        files: build/libs/
        # Name of output zip file
        dest: build/libs/build.zip
    #- name: Upload Build Artifact
    #  uses: actions/upload-artifact@v3.1.0
    #  with:
    #    path: build/libs/*.jar
    - name: Upload to Gofile # Avoiding File Limits of Github
      run:  ./.github/scripts/upload.sh build/libs/build.zip
      shell: bash
    - name: Clean Workspace
      run: rm -rf ./*
